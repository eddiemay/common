package com.digitald4.common.observer;

import junit.framework.TestCase;

/**
 * The class <code>NodeTest</code> contains tests for the class {@link
 * <code>Node</code>}
 *
 * @pattern JUnit Test Case
 *
 * @generatedBy CodePro at 3/31/11 3:29 PM
 *
 * @author mayfiee
 *
 * @version $Revision$
 */
public class NodeTest extends TestCase {

	/**
	 * Construct new test instance
	 *
	 * @param name the test name
	 */
	public NodeTest(String name) {
		super(name);
	}
	
	/**
	 * Run the int getValue() method test
	 */
	public void testGetValue() {
		Node node = new Node(42);
		assertEquals(42,node.getValue());
	}
	
	/**
	 * Run the int getTotalValueNonCached() method test
	 */
	public void testGetTotalValueNonCached() {
		//Create Zero Level
		Node node = new Node(42);
		assertEquals(node.getValue(),node.getTotalValueNonCached());
		
		//Add first Level
		Node n1 = new Node(6);
		node.addNode(n1);
		assertEquals(node.getValue()+n1.getValue(),node.getTotalValueNonCached());
		Node n2 = new Node(2);
		node.addNode(n2);
		assertEquals(node.getValue()+n1.getValue()+n2.getValue(),node.getTotalValueNonCached());
		
		//Add Second Level
		Node n1_1 = new Node(5);
		n1.addNode(n1_1);
		assertEquals(node.getValue()+n1.getValue()+n2.getValue()+n1_1.getValue(),node.getTotalValueNonCached());
		Node n2_1 = new Node(4);
		n2.addNode(n2_1);
		assertEquals(node.getValue()+n1.getValue()+n2.getValue()+n1_1.getValue()+n2_1.getValue(),node.getTotalValueNonCached());
		
		//Edit Zero Level
		node.setValue(20);
		assertEquals(node.getValue()+n1.getValue()+n2.getValue()+n1_1.getValue()+n2_1.getValue(),node.getTotalValueNonCached());
		
		//Edit First Level
		n1.setValue(8);
		assertEquals(node.getValue()+n1.getValue()+n2.getValue()+n1_1.getValue()+n2_1.getValue(),node.getTotalValueNonCached());
		
		//Edit Second Level
		n2_1.setValue(14);
		assertEquals(node.getValue()+n1.getValue()+n2.getValue()+n1_1.getValue()+n2_1.getValue(),node.getTotalValueNonCached());
		
		//Remove First Level
		node.removeNode(n1);
		assertEquals(node.getValue()+n2.getValue()+n2_1.getValue(),node.getTotalValueNonCached());
		
		//Remove Second Level
		n2.removeNode(n2_1);
		assertEquals(node.getValue()+n2.getValue(),node.getTotalValueNonCached());
		
	}

	/**
	 * Run the int getTotalValueCached() method test
	 */
	public void testGetTotalValueCached() {
		//Create Zero Level
		Node node = new Node(42);
		assertEquals(node.getTotalValueNonCached(),node.getTotalValueCached());
		
		//Add first Level
		Node n1 = new Node(6);
		node.addNode(n1);
		assertEquals(node.getTotalValueNonCached(),node.getTotalValueCached());
		Node n2 = new Node(2);
		node.addNode(n2);
		assertEquals(node.getTotalValueNonCached(),node.getTotalValueCached());
		
		//Add Second Level
		Node n1_1 = new Node(5);
		n1.addNode(n1_1);
		assertEquals(node.getTotalValueNonCached(),node.getTotalValueCached());
		Node n2_1 = new Node(4);
		n2.addNode(n2_1);
		assertEquals(node.getTotalValueNonCached(),node.getTotalValueCached());
		
		//Edit Zero Level
		node.setValue(20);
		assertEquals(node.getTotalValueNonCached(),node.getTotalValueCached());
		
		//Edit First Level
		n1.setValue(8);
		assertEquals(node.getTotalValueNonCached(),node.getTotalValueCached());
		
		//Edit Second Level
		n2_1.setValue(14);
		assertEquals(node.getTotalValueNonCached(),node.getTotalValueCached());
		
		//Remove First Level
		node.removeNode(n1);
		assertEquals(node.getTotalValueNonCached(),node.getTotalValueCached());
		
		//Remove Second Level
		n2.removeNode(n2_1);
		assertEquals(node.getTotalValueNonCached(),node.getTotalValueCached());
	}
}

/*$CPS$ This comment was generated by CodePro. Do not edit it.
 * patternId = com.instantiations.assist.eclipse.pattern.testCasePattern
 * strategyId = com.instantiations.assist.eclipse.pattern.testCasePattern.junitTestCase
 * additionalTestNames = 
 * assertTrue = false
 * callTestMethod = true
 * createMain = false
 * createSetUp = false
 * createTearDown = false
 * createTestFixture = false
 * createTestStubs = false
 * methods = getTotalValueCached(),getTotalValueNonCached(),getValue()
 * package = com.sce.esp.pattern.observer
 * package.sourceFolder = esp/test
 * superclassType = junit.framework.TestCase
 * testCase = NodeTest
 * testClassType = Node
 */